// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protos.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DrawNiceTrace {

  /// <summary>Holder for reflection information generated from Protos.proto</summary>
  public static partial class ProtosReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtosReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxQcm90b3MucHJvdG8SDWRyYXduaWNldHJhY2UiMgoHQWRkSXRlbRISCgpD",
            "YXJ0TnVtYmVyGAEgASgDEhMKC1Byb2R1Y3ROYW1lGAIgASgJIiYKEEFzc2ln",
            "bkNhcnROdW1iZXISEgoKQ2FydE51bWJlchgBIAEoAyIoChJDYXJ0TnVtYmVy",
            "UmVzcG9uc2USEgoKQ2FydE51bWJlchgBIAEoAyIfCglPcmRlckNhcnQSEgoK",
            "Q2FydE51bWJlchgBIAEoAyIyCgVPcmRlchITCgtPcmRlck51bWJlchgBIAEo",
            "AxIUCgxQcm9kdWN0TmFtZXMYAiADKAkiRwoMQ29uZmlybU9yZGVyEhIKCkNh",
            "cnROdW1iZXIYASABKAMSIwoFT3JkZXIYAiABKAsyFC5kcmF3bmljZXRyYWNl",
            "Lk9yZGVyIisKFENvbmZpcm1PcmRlclJlc3BvbnNlEhMKC09yZGVyTnVtYmVy",
            "GAEgASgDIigKEUFza1BheW1lbnREZXRhaWxzEhMKC09yZGVyTnVtYmVyGAEg",
            "ASgDIikKElNlbmRQYXltZW50RGV0YWlscxITCgtPcmRlck51bWJlchgBIAEo",
            "AyIlCg5Qcm9jZXNzUGF5bWVudBITCgtPcmRlck51bWJlchgBIAEoAyIkChZQ",
            "cm9jZXNzUGF5bWVudFJlc3BvbnNlEgoKAk9rGAEgASgIIhwKDkNvbmZpcm1Q",
            "YXltZW50EgoKAk9rGAEgASgIIiIKC1RyaWdnZXJGb29kEhMKC09yZGVyTnVt",
            "YmVyGAEgASgDIg0KC0RlbGl2ZXJGb29kQhCqAg1EcmF3TmljZVRyYWNlYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.AddItem), global::DrawNiceTrace.AddItem.Parser, new[]{ "CartNumber", "ProductName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.AssignCartNumber), global::DrawNiceTrace.AssignCartNumber.Parser, new[]{ "CartNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.CartNumberResponse), global::DrawNiceTrace.CartNumberResponse.Parser, new[]{ "CartNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.OrderCart), global::DrawNiceTrace.OrderCart.Parser, new[]{ "CartNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.Order), global::DrawNiceTrace.Order.Parser, new[]{ "OrderNumber", "ProductNames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.ConfirmOrder), global::DrawNiceTrace.ConfirmOrder.Parser, new[]{ "CartNumber", "Order" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.ConfirmOrderResponse), global::DrawNiceTrace.ConfirmOrderResponse.Parser, new[]{ "OrderNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.AskPaymentDetails), global::DrawNiceTrace.AskPaymentDetails.Parser, new[]{ "OrderNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.SendPaymentDetails), global::DrawNiceTrace.SendPaymentDetails.Parser, new[]{ "OrderNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.ProcessPayment), global::DrawNiceTrace.ProcessPayment.Parser, new[]{ "OrderNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.ProcessPaymentResponse), global::DrawNiceTrace.ProcessPaymentResponse.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.ConfirmPayment), global::DrawNiceTrace.ConfirmPayment.Parser, new[]{ "Ok" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.TriggerFood), global::DrawNiceTrace.TriggerFood.Parser, new[]{ "OrderNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DrawNiceTrace.DeliverFood), global::DrawNiceTrace.DeliverFood.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AddItem : pb::IMessage<AddItem> {
    private static readonly pb::MessageParser<AddItem> _parser = new pb::MessageParser<AddItem>(() => new AddItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddItem(AddItem other) : this() {
      cartNumber_ = other.cartNumber_;
      productName_ = other.productName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddItem Clone() {
      return new AddItem(this);
    }

    /// <summary>Field number for the "CartNumber" field.</summary>
    public const int CartNumberFieldNumber = 1;
    private long cartNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CartNumber {
      get { return cartNumber_; }
      set {
        cartNumber_ = value;
      }
    }

    /// <summary>Field number for the "ProductName" field.</summary>
    public const int ProductNameFieldNumber = 2;
    private string productName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductName {
      get { return productName_; }
      set {
        productName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CartNumber != other.CartNumber) return false;
      if (ProductName != other.ProductName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CartNumber != 0L) hash ^= CartNumber.GetHashCode();
      if (ProductName.Length != 0) hash ^= ProductName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CartNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CartNumber);
      }
      if (ProductName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProductName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CartNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CartNumber);
      }
      if (ProductName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddItem other) {
      if (other == null) {
        return;
      }
      if (other.CartNumber != 0L) {
        CartNumber = other.CartNumber;
      }
      if (other.ProductName.Length != 0) {
        ProductName = other.ProductName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CartNumber = input.ReadInt64();
            break;
          }
          case 18: {
            ProductName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignCartNumber : pb::IMessage<AssignCartNumber> {
    private static readonly pb::MessageParser<AssignCartNumber> _parser = new pb::MessageParser<AssignCartNumber>(() => new AssignCartNumber());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignCartNumber> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignCartNumber() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignCartNumber(AssignCartNumber other) : this() {
      cartNumber_ = other.cartNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignCartNumber Clone() {
      return new AssignCartNumber(this);
    }

    /// <summary>Field number for the "CartNumber" field.</summary>
    public const int CartNumberFieldNumber = 1;
    private long cartNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CartNumber {
      get { return cartNumber_; }
      set {
        cartNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignCartNumber);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignCartNumber other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CartNumber != other.CartNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CartNumber != 0L) hash ^= CartNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CartNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CartNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CartNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CartNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignCartNumber other) {
      if (other == null) {
        return;
      }
      if (other.CartNumber != 0L) {
        CartNumber = other.CartNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CartNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CartNumberResponse : pb::IMessage<CartNumberResponse> {
    private static readonly pb::MessageParser<CartNumberResponse> _parser = new pb::MessageParser<CartNumberResponse>(() => new CartNumberResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CartNumberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartNumberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartNumberResponse(CartNumberResponse other) : this() {
      cartNumber_ = other.cartNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartNumberResponse Clone() {
      return new CartNumberResponse(this);
    }

    /// <summary>Field number for the "CartNumber" field.</summary>
    public const int CartNumberFieldNumber = 1;
    private long cartNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CartNumber {
      get { return cartNumber_; }
      set {
        cartNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CartNumberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CartNumberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CartNumber != other.CartNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CartNumber != 0L) hash ^= CartNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CartNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CartNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CartNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CartNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CartNumberResponse other) {
      if (other == null) {
        return;
      }
      if (other.CartNumber != 0L) {
        CartNumber = other.CartNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CartNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderCart : pb::IMessage<OrderCart> {
    private static readonly pb::MessageParser<OrderCart> _parser = new pb::MessageParser<OrderCart>(() => new OrderCart());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderCart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCart(OrderCart other) : this() {
      cartNumber_ = other.cartNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCart Clone() {
      return new OrderCart(this);
    }

    /// <summary>Field number for the "CartNumber" field.</summary>
    public const int CartNumberFieldNumber = 1;
    private long cartNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CartNumber {
      get { return cartNumber_; }
      set {
        cartNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderCart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderCart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CartNumber != other.CartNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CartNumber != 0L) hash ^= CartNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CartNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CartNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CartNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CartNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderCart other) {
      if (other == null) {
        return;
      }
      if (other.CartNumber != 0L) {
        CartNumber = other.CartNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CartNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Order : pb::IMessage<Order> {
    private static readonly pb::MessageParser<Order> _parser = new pb::MessageParser<Order>(() => new Order());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Order> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order(Order other) : this() {
      orderNumber_ = other.orderNumber_;
      productNames_ = other.productNames_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order Clone() {
      return new Order(this);
    }

    /// <summary>Field number for the "OrderNumber" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    /// <summary>Field number for the "ProductNames" field.</summary>
    public const int ProductNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_productNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> productNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ProductNames {
      get { return productNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Order);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Order other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      if(!productNames_.Equals(other.productNames_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      hash ^= productNames_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
      productNames_.WriteTo(output, _repeated_productNames_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      size += productNames_.CalculateSize(_repeated_productNames_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Order other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
      productNames_.Add(other.productNames_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
          case 18: {
            productNames_.AddEntriesFrom(input, _repeated_productNames_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConfirmOrder : pb::IMessage<ConfirmOrder> {
    private static readonly pb::MessageParser<ConfirmOrder> _parser = new pb::MessageParser<ConfirmOrder>(() => new ConfirmOrder());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfirmOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmOrder(ConfirmOrder other) : this() {
      cartNumber_ = other.cartNumber_;
      Order = other.order_ != null ? other.Order.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmOrder Clone() {
      return new ConfirmOrder(this);
    }

    /// <summary>Field number for the "CartNumber" field.</summary>
    public const int CartNumberFieldNumber = 1;
    private long cartNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CartNumber {
      get { return cartNumber_; }
      set {
        cartNumber_ = value;
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 2;
    private global::DrawNiceTrace.Order order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DrawNiceTrace.Order Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfirmOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfirmOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CartNumber != other.CartNumber) return false;
      if (!object.Equals(Order, other.Order)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CartNumber != 0L) hash ^= CartNumber.GetHashCode();
      if (order_ != null) hash ^= Order.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CartNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CartNumber);
      }
      if (order_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CartNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CartNumber);
      }
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfirmOrder other) {
      if (other == null) {
        return;
      }
      if (other.CartNumber != 0L) {
        CartNumber = other.CartNumber;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          order_ = new global::DrawNiceTrace.Order();
        }
        Order.MergeFrom(other.Order);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            CartNumber = input.ReadInt64();
            break;
          }
          case 18: {
            if (order_ == null) {
              order_ = new global::DrawNiceTrace.Order();
            }
            input.ReadMessage(order_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConfirmOrderResponse : pb::IMessage<ConfirmOrderResponse> {
    private static readonly pb::MessageParser<ConfirmOrderResponse> _parser = new pb::MessageParser<ConfirmOrderResponse>(() => new ConfirmOrderResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfirmOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmOrderResponse(ConfirmOrderResponse other) : this() {
      orderNumber_ = other.orderNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmOrderResponse Clone() {
      return new ConfirmOrderResponse(this);
    }

    /// <summary>Field number for the "OrderNumber" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfirmOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfirmOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfirmOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskPaymentDetails : pb::IMessage<AskPaymentDetails> {
    private static readonly pb::MessageParser<AskPaymentDetails> _parser = new pb::MessageParser<AskPaymentDetails>(() => new AskPaymentDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskPaymentDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskPaymentDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskPaymentDetails(AskPaymentDetails other) : this() {
      orderNumber_ = other.orderNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskPaymentDetails Clone() {
      return new AskPaymentDetails(this);
    }

    /// <summary>Field number for the "OrderNumber" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskPaymentDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskPaymentDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskPaymentDetails other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendPaymentDetails : pb::IMessage<SendPaymentDetails> {
    private static readonly pb::MessageParser<SendPaymentDetails> _parser = new pb::MessageParser<SendPaymentDetails>(() => new SendPaymentDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendPaymentDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPaymentDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPaymentDetails(SendPaymentDetails other) : this() {
      orderNumber_ = other.orderNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendPaymentDetails Clone() {
      return new SendPaymentDetails(this);
    }

    /// <summary>Field number for the "OrderNumber" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendPaymentDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendPaymentDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendPaymentDetails other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProcessPayment : pb::IMessage<ProcessPayment> {
    private static readonly pb::MessageParser<ProcessPayment> _parser = new pb::MessageParser<ProcessPayment>(() => new ProcessPayment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessPayment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessPayment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessPayment(ProcessPayment other) : this() {
      orderNumber_ = other.orderNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessPayment Clone() {
      return new ProcessPayment(this);
    }

    /// <summary>Field number for the "OrderNumber" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessPayment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessPayment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessPayment other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProcessPaymentResponse : pb::IMessage<ProcessPaymentResponse> {
    private static readonly pb::MessageParser<ProcessPaymentResponse> _parser = new pb::MessageParser<ProcessPaymentResponse>(() => new ProcessPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessPaymentResponse(ProcessPaymentResponse other) : this() {
      ok_ = other.ok_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessPaymentResponse Clone() {
      return new ProcessPaymentResponse(this);
    }

    /// <summary>Field number for the "Ok" field.</summary>
    public const int OkFieldNumber = 1;
    private bool ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != false) hash ^= Ok.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConfirmPayment : pb::IMessage<ConfirmPayment> {
    private static readonly pb::MessageParser<ConfirmPayment> _parser = new pb::MessageParser<ConfirmPayment>(() => new ConfirmPayment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfirmPayment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmPayment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmPayment(ConfirmPayment other) : this() {
      ok_ = other.ok_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmPayment Clone() {
      return new ConfirmPayment(this);
    }

    /// <summary>Field number for the "Ok" field.</summary>
    public const int OkFieldNumber = 1;
    private bool ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfirmPayment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfirmPayment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ok != other.Ok) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ok != false) hash ^= Ok.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ok != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ok);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ok != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfirmPayment other) {
      if (other == null) {
        return;
      }
      if (other.Ok != false) {
        Ok = other.Ok;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ok = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TriggerFood : pb::IMessage<TriggerFood> {
    private static readonly pb::MessageParser<TriggerFood> _parser = new pb::MessageParser<TriggerFood>(() => new TriggerFood());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerFood> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerFood() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerFood(TriggerFood other) : this() {
      orderNumber_ = other.orderNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerFood Clone() {
      return new TriggerFood(this);
    }

    /// <summary>Field number for the "OrderNumber" field.</summary>
    public const int OrderNumberFieldNumber = 1;
    private long orderNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderNumber {
      get { return orderNumber_; }
      set {
        orderNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerFood);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerFood other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderNumber != other.OrderNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderNumber != 0L) hash ^= OrderNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrderNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerFood other) {
      if (other == null) {
        return;
      }
      if (other.OrderNumber != 0L) {
        OrderNumber = other.OrderNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OrderNumber = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeliverFood : pb::IMessage<DeliverFood> {
    private static readonly pb::MessageParser<DeliverFood> _parser = new pb::MessageParser<DeliverFood>(() => new DeliverFood());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeliverFood> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DrawNiceTrace.ProtosReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliverFood() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliverFood(DeliverFood other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliverFood Clone() {
      return new DeliverFood(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeliverFood);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeliverFood other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeliverFood other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
