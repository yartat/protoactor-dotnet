// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Messages {

  /// <summary>Holder for reflection information generated from Protos.proto</summary>
  public static partial class ProtosReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtosReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxQcm90b3MucHJvdG8SCG1lc3NhZ2VzGhhQcm90by5BY3Rvci9Qcm90b3Mu",
            "cHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8imQEKDkRl",
            "cG9zaXRSZXF1ZXN0EgoKAmlkGAEgASgJEigKBGRhdGUYAiABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEhAKCHBsYXllcklkGAMgASgJEg4KBmFt",
            "b3VudBgEIAEoARIQCghjdXJyZW5jeRgFIAEoCRINCgVraW9zaxgGIAEoCRIO",
            "CgZtYW51YWwYByABKAgi9QIKD0RlcG9zaXRSZXNwb25zZRIKCgJpZBgBIAEo",
            "CRIYChBhbHJlYWR5UHJvY2Vzc2VkGAIgASgIEjEKDXByb2Nlc3NlZFRpbWUY",
            "AyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjkKCGJhbGFuY2Vz",
            "GAcgAygLMicubWVzc2FnZXMuRGVwb3NpdFJlc3BvbnNlLkJhbGFuY2VzRW50",
            "cnkSNwoHY2hhbmdlcxgIIAMoCzImLm1lc3NhZ2VzLkRlcG9zaXRSZXNwb25z",
            "ZS5DaGFuZ2VzRW50cnkaNAoFRXJyb3ISDAoEa2luZBgEIAEoBRIMCgRjb2Rl",
            "GAUgASgJEg8KB21lc3NhZ2UYBiABKAkaLwoNQmFsYW5jZXNFbnRyeRILCgNr",
            "ZXkYASABKAkSDQoFdmFsdWUYAiABKAE6AjgBGi4KDENoYW5nZXNFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAE6AjgBQguqAghNZXNzYWdlc2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Proto.ProtosReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.DepositRequest), global::Messages.DepositRequest.Parser, new[]{ "Id", "Date", "PlayerId", "Amount", "Currency", "Kiosk", "Manual" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Messages.DepositResponse), global::Messages.DepositResponse.Parser, new[]{ "Id", "AlreadyProcessed", "ProcessedTime", "Balances", "Changes" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Messages.DepositResponse.Types.Error), global::Messages.DepositResponse.Types.Error.Parser, new[]{ "Kind", "Code", "Message" }, null, null, null),
            null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DepositRequest : pb::IMessage<DepositRequest> {
    private static readonly pb::MessageParser<DepositRequest> _parser = new pb::MessageParser<DepositRequest>(() => new DepositRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DepositRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.ProtosReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositRequest(DepositRequest other) : this() {
      id_ = other.id_;
      Date = other.date_ != null ? other.Date.Clone() : null;
      playerId_ = other.playerId_;
      amount_ = other.amount_;
      currency_ = other.currency_;
      kiosk_ = other.kiosk_;
      manual_ = other.manual_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositRequest Clone() {
      return new DepositRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp date_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 3;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private double amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 5;
    private string currency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kiosk" field.</summary>
    public const int KioskFieldNumber = 6;
    private string kiosk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kiosk {
      get { return kiosk_; }
      set {
        kiosk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "manual" field.</summary>
    public const int ManualFieldNumber = 7;
    private bool manual_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Manual {
      get { return manual_; }
      set {
        manual_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DepositRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DepositRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Date, other.Date)) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Amount != Amount) return false;
      if (Currency != other.Currency) return false;
      if (Kiosk != other.Kiosk) return false;
      return Manual == other.Manual;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (date_ != null) hash ^= Date.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (Amount != 0D) hash ^= Amount.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (Kiosk.Length != 0) hash ^= Kiosk.GetHashCode();
      if (Manual != false) hash ^= Manual.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (date_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Date);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerId);
      }
      if (Amount != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Amount);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Currency);
      }
      if (Kiosk.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Kiosk);
      }
      if (Manual != false) {
        output.WriteRawTag(56);
        output.WriteBool(Manual);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (Amount != 0D) {
        size += 1 + 8;
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (Kiosk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kiosk);
      }
      if (Manual != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DepositRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.date_ != null) {
        if (date_ == null) {
          date_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Date.MergeFrom(other.Date);
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Amount != 0D) {
        Amount = other.Amount;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.Kiosk.Length != 0) {
        Kiosk = other.Kiosk;
      }
      if (other.Manual != false) {
        Manual = other.Manual;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (date_ == null) {
              date_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(date_);
            break;
          }
          case 26: {
            PlayerId = input.ReadString();
            break;
          }
          case 33: {
            Amount = input.ReadDouble();
            break;
          }
          case 42: {
            Currency = input.ReadString();
            break;
          }
          case 50: {
            Kiosk = input.ReadString();
            break;
          }
          case 56: {
            Manual = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DepositResponse : pb::IMessage<DepositResponse> {
    private static readonly pb::MessageParser<DepositResponse> _parser = new pb::MessageParser<DepositResponse>(() => new DepositResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DepositResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Messages.ProtosReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositResponse(DepositResponse other) : this() {
      id_ = other.id_;
      alreadyProcessed_ = other.alreadyProcessed_;
      ProcessedTime = other.processedTime_ != null ? other.ProcessedTime.Clone() : null;
      balances_ = other.balances_.Clone();
      changes_ = other.changes_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DepositResponse Clone() {
      return new DepositResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alreadyProcessed" field.</summary>
    public const int AlreadyProcessedFieldNumber = 2;
    private bool alreadyProcessed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AlreadyProcessed {
      get { return alreadyProcessed_; }
      set {
        alreadyProcessed_ = value;
      }
    }

    /// <summary>Field number for the "processedTime" field.</summary>
    public const int ProcessedTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp processedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ProcessedTime {
      get { return processedTime_; }
      set {
        processedTime_ = value;
      }
    }

    /// <summary>Field number for the "balances" field.</summary>
    public const int BalancesFieldNumber = 7;
    private static readonly pbc::MapField<string, double>.Codec _map_balances_codec
        = new pbc::MapField<string, double>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForDouble(17), 58);
    private readonly pbc::MapField<string, double> balances_ = new pbc::MapField<string, double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, double> Balances {
      get { return balances_; }
    }

    /// <summary>Field number for the "changes" field.</summary>
    public const int ChangesFieldNumber = 8;
    private static readonly pbc::MapField<string, double>.Codec _map_changes_codec
        = new pbc::MapField<string, double>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForDouble(17), 66);
    private readonly pbc::MapField<string, double> changes_ = new pbc::MapField<string, double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, double> Changes {
      get { return changes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DepositResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DepositResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AlreadyProcessed != other.AlreadyProcessed) return false;
      if (!object.Equals(ProcessedTime, other.ProcessedTime)) return false;
      if (!Balances.Equals(other.Balances)) return false;
      return Changes.Equals(other.Changes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (AlreadyProcessed != false) hash ^= AlreadyProcessed.GetHashCode();
      if (processedTime_ != null) hash ^= ProcessedTime.GetHashCode();
      hash ^= Balances.GetHashCode();
      hash ^= Changes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (AlreadyProcessed != false) {
        output.WriteRawTag(16);
        output.WriteBool(AlreadyProcessed);
      }
      if (processedTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ProcessedTime);
      }
      balances_.WriteTo(output, _map_balances_codec);
      changes_.WriteTo(output, _map_changes_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (AlreadyProcessed != false) {
        size += 1 + 1;
      }
      if (processedTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessedTime);
      }
      size += balances_.CalculateSize(_map_balances_codec);
      size += changes_.CalculateSize(_map_changes_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DepositResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.AlreadyProcessed != false) {
        AlreadyProcessed = other.AlreadyProcessed;
      }
      if (other.processedTime_ != null) {
        if (processedTime_ == null) {
          processedTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ProcessedTime.MergeFrom(other.ProcessedTime);
      }
      balances_.Add(other.balances_);
      changes_.Add(other.changes_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            AlreadyProcessed = input.ReadBool();
            break;
          }
          case 26: {
            if (processedTime_ == null) {
              processedTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(processedTime_);
            break;
          }
          case 58: {
            balances_.AddEntriesFrom(input, _map_balances_codec);
            break;
          }
          case 66: {
            changes_.AddEntriesFrom(input, _map_changes_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DepositResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Error : pb::IMessage<Error> {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Messages.DepositResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error(Error other) : this() {
          kind_ = other.kind_;
          code_ = other.code_;
          message_ = other.message_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error Clone() {
          return new Error(this);
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 4;
        private int kind_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Kind {
          get { return kind_; }
          set {
            kind_ = value;
          }
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 5;
        private string code_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Code {
          get { return code_; }
          set {
            code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 6;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Error other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Kind != other.Kind) return false;
          if (Code != other.Code) return false;
          return Message == other.Message;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Kind != 0) hash ^= Kind.GetHashCode();
          if (Code.Length != 0) hash ^= Code.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Kind != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Kind);
          }
          if (Code.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Code);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Message);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Kind != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kind);
          }
          if (Code.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Error other) {
          if (other == null) {
            return;
          }
          if (other.Kind != 0) {
            Kind = other.Kind;
          }
          if (other.Code.Length != 0) {
            Code = other.Code;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
              case 32: {
                Kind = input.ReadInt32();
                break;
              }
              case 42: {
                Code = input.ReadString();
                break;
              }
              case 50: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
